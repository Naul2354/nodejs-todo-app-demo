name: Release

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: "☁️ Checkout code..."
        uses: actions/checkout@v2

      - name: "🔧 Setup Node.js..."
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: "🔧 Install dependencies..."
        run: npm install
        
      - name: "📦 Unit test"
        run: npm test

      - name: "📂 Upload artifact for deployment job"
        uses: actions/upload-artifact@v2
        with:
          name: node-app
          path: .

  build-container:
    name: Build Docker Container
    runs-on: ubuntu-latest
    needs: build
    timeout-minutes: 10

    steps:
      - name: "☁️ Checkout code..."
        uses: actions/checkout@v2

      - name: "🔧 Setup Node.js..."
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: "🔧 Install dependencies..."
        run: npm install
        
      - name: "🐳 Build Docker image"
        run: |
          # Build the Docker image
          docker build -t todo-app:latest .
        
      - name: "📂 Upload Docker image as artifact"
        uses: actions/upload-artifact@v2
        with:
          name: docker-image
          path: . # Include the Dockerfile and any necessary files

  deploy-container:
    name: Deploy Docker Container to Azure Web App
    runs-on: ubuntu-latest
    needs: build-container
    environment:
      name: 'Production'

    steps:
      - name: "📂 Download Docker image artifact"
        uses: actions/download-artifact@v2
        with:
          name: docker-image

      # - name: "🚀 Load Docker image from artifact"
      #   run: |
      #     # Load the Docker image from the artifact
      #     docker load -i docker-image/todo-app.tar
        
      - name: "🚀 Deploy Docker image to Azure Web App"
        uses: azure/webapps-container-deploy@v1
        with:
          app-name: 'todoapp1'
          images: 'todo-app:latest'

  cleanup:
    name: Clean up
    runs-on: ubuntu-latest
    needs:
      - deploy-container
    steps:
      - name: "♻️ Remove Docker image artifact"
        run: |
          # Remove the Docker image artifact directory
          rm -rf docker-image